{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Funding__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "fundingAddress",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x3cdede5cf0cc7e78e25ff02516c878df499e10cdfc7843e8bff246c20e92b203",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "938204",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x5d9d80e9946005fa52dbd49dd04d828520a4aa3ba71a811373bd8014d6749b61",
    "transactionHash": "0x3cdede5cf0cc7e78e25ff02516c878df499e10cdfc7843e8bff246c20e92b203",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "938204",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "9348c68a15ea55ce69b69aee6d79ce14",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Funding__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundingAddress\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"eskaine\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Funding.sol\":\"Funding\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/Funding.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"./PriceConverter.sol\\\";\\r\\n\\r\\nerror Funding__NotOwner();\\r\\n\\r\\n/** @title Contract for crowd funding\\r\\n *  @author eskaine\\r\\n */\\r\\ncontract Funding {\\r\\n    using PriceConverter for uint256;\\r\\n\\r\\n    uint256 public constant MINIMUM_USD = 50 * 10**18;\\r\\n    address private immutable i_owner;\\r\\n    address[] private s_funders;\\r\\n    mapping(address => uint256) private s_addressToAmountFunded;\\r\\n    AggregatorV3Interface private s_priceFeed;\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        if (msg.sender != i_owner) revert Funding__NotOwner();\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    constructor(address priceFeed) {\\r\\n        s_priceFeed = AggregatorV3Interface(priceFeed);\\r\\n        i_owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    function fund() public payable {\\r\\n        require(msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\r\\n\\r\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\r\\n        s_funders.push(msg.sender);\\r\\n    }\\r\\n\\r\\n    function withdraw() public onlyOwner {\\r\\n        address[] memory funders = s_funders;\\r\\n\\r\\n        for (uint256 funderIndex = 0; funderIndex < funders.length; funderIndex++) {\\r\\n            address funder = funders[funderIndex];\\r\\n            s_addressToAmountFunded[funder] = 0;\\r\\n        }\\r\\n        s_funders = new address[](0);\\r\\n\\r\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\r\\n        require(success);\\r\\n    }\\r\\n\\r\\n    function getAddressToAmountFunded(address fundingAddress) public view returns (uint256) {\\r\\n        return s_addressToAmountFunded[fundingAddress];\\r\\n    }\\r\\n\\r\\n    function getVersion() public view returns (uint256) {\\r\\n        return s_priceFeed.version();\\r\\n    }\\r\\n\\r\\n    function getFunder(uint256 index) public view returns (address) {\\r\\n        return s_funders[index];\\r\\n    }\\r\\n\\r\\n    function getOwner() public view returns (address) {\\r\\n        return i_owner;\\r\\n    }\\r\\n\\r\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\r\\n        return s_priceFeed;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x9c8789ce2c4592597c3d170600da29aa17ae221a0c17227160df1e8b8bba47ff\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PriceConverter {\\r\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\r\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\r\\n\\r\\n        // ETH/USD rate in 18 digit\\r\\n        return uint256(answer * 10000000000);\\r\\n    }\\r\\n\\r\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed) internal view returns (uint256) {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        // the actual ETH/USD conversation rate, after adjusting the extra 0s.\\r\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\r\\n\\r\\n        return ethAmountInUsd;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x7a15cc508f047ba1b5bb55529cde3978c65147cb1ed28b0e17cbd27e832e7f7f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200111438038062001114833981810160405281019062000037919062000120565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c610f956200017f600039600081816102b9015281816104af01526105560152610f956000f3fe60806040526004361061007b5760003560e01c8063893d20e81161004e578063893d20e81461012a5780639e87a5cd14610155578063b60d428814610180578063d7b4750c1461018a5761007b565b80630343fb25146100805780630d8e6e2c146100bd5780633ccfd60b146100e85780636b69a592146100ff575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a2919061090c565b6101c7565b6040516100b49190610952565b60405180910390f35b3480156100c957600080fd5b506100d2610210565b6040516100df9190610952565b60405180910390f35b3480156100f457600080fd5b506100fd6102b7565b005b34801561010b57600080fd5b50610114610545565b6040516101219190610952565b60405180910390f35b34801561013657600080fd5b5061013f610552565b60405161014c919061097c565b60405180910390f35b34801561016157600080fd5b5061016a61057a565b60405161017791906109f6565b60405180910390f35b6101886105a4565b005b34801561019657600080fd5b506101b160048036038101906101ac9190610a3d565b6106df565b6040516101be919061097c565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561027a57600080fd5b505afa15801561028e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b29190610a7f565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461033c576040517fb6c483f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156103bf57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610375575b5050505050905060005b815181101561044a5760008282815181106103e7576103e6610aac565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061044290610b0a565b9150506103c9565b50600067ffffffffffffffff81111561046657610465610b53565b5b6040519080825280602002602001820160405280156104945781602001602082028036833780820191505090505b50600090805190602001906104aa929190610802565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516104f190610bb3565b60006040518083038185875af1925050503d806000811461052e576040519150601f19603f3d011682016040523d82523d6000602084013e610533565b606091505b505090508061054157600080fd5b5050565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b18800006105e3600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461072690919063ffffffff16565b1015610624576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061b90610c25565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106739190610c45565b925050819055506000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008082815481106106f4576106f3610aac565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061073283610762565b90506000670de0b6b3a7640000858361074b9190610c9b565b6107559190610d24565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156107ab57600080fd5b505afa1580156107bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e39190610dcd565b5050509150506402540be400816107fa9190610e48565b915050919050565b82805482825590600052602060002090810192821561087b579160200282015b8281111561087a5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610822565b5b509050610888919061088c565b5090565b5b808211156108a557600081600090555060010161088d565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108d9826108ae565b9050919050565b6108e9816108ce565b81146108f457600080fd5b50565b600081359050610906816108e0565b92915050565b600060208284031215610922576109216108a9565b5b6000610930848285016108f7565b91505092915050565b6000819050919050565b61094c81610939565b82525050565b60006020820190506109676000830184610943565b92915050565b610976816108ce565b82525050565b6000602082019050610991600083018461096d565b92915050565b6000819050919050565b60006109bc6109b76109b2846108ae565b610997565b6108ae565b9050919050565b60006109ce826109a1565b9050919050565b60006109e0826109c3565b9050919050565b6109f0816109d5565b82525050565b6000602082019050610a0b60008301846109e7565b92915050565b610a1a81610939565b8114610a2557600080fd5b50565b600081359050610a3781610a11565b92915050565b600060208284031215610a5357610a526108a9565b5b6000610a6184828501610a28565b91505092915050565b600081519050610a7981610a11565b92915050565b600060208284031215610a9557610a946108a9565b5b6000610aa384828501610a6a565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b1582610939565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610b4857610b47610adb565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610b9d600083610b82565b9150610ba882610b8d565b600082019050919050565b6000610bbe82610b90565b9150819050919050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610c0f601b83610bc8565b9150610c1a82610bd9565b602082019050919050565b60006020820190508181036000830152610c3e81610c02565b9050919050565b6000610c5082610939565b9150610c5b83610939565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610c9057610c8f610adb565b5b828201905092915050565b6000610ca682610939565b9150610cb183610939565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610cea57610ce9610adb565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d2f82610939565b9150610d3a83610939565b925082610d4a57610d49610cf5565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610d7481610d55565b8114610d7f57600080fd5b50565b600081519050610d9181610d6b565b92915050565b6000819050919050565b610daa81610d97565b8114610db557600080fd5b50565b600081519050610dc781610da1565b92915050565b600080600080600060a08688031215610de957610de86108a9565b5b6000610df788828901610d82565b9550506020610e0888828901610db8565b9450506040610e1988828901610a6a565b9350506060610e2a88828901610a6a565b9250506080610e3b88828901610d82565b9150509295509295909350565b6000610e5382610d97565b9150610e5e83610d97565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610e9d57610e9c610adb565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610eda57610ed9610adb565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610f1757610f16610adb565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610f5457610f53610adb565b5b82820290509291505056fea26469706673582212209a2d6cfa4a24aacb27dd1110f2792ed544678cd2f392409565e41352b719260964736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c8063893d20e81161004e578063893d20e81461012a5780639e87a5cd14610155578063b60d428814610180578063d7b4750c1461018a5761007b565b80630343fb25146100805780630d8e6e2c146100bd5780633ccfd60b146100e85780636b69a592146100ff575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a2919061090c565b6101c7565b6040516100b49190610952565b60405180910390f35b3480156100c957600080fd5b506100d2610210565b6040516100df9190610952565b60405180910390f35b3480156100f457600080fd5b506100fd6102b7565b005b34801561010b57600080fd5b50610114610545565b6040516101219190610952565b60405180910390f35b34801561013657600080fd5b5061013f610552565b60405161014c919061097c565b60405180910390f35b34801561016157600080fd5b5061016a61057a565b60405161017791906109f6565b60405180910390f35b6101886105a4565b005b34801561019657600080fd5b506101b160048036038101906101ac9190610a3d565b6106df565b6040516101be919061097c565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561027a57600080fd5b505afa15801561028e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b29190610a7f565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461033c576040517fb6c483f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156103bf57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610375575b5050505050905060005b815181101561044a5760008282815181106103e7576103e6610aac565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061044290610b0a565b9150506103c9565b50600067ffffffffffffffff81111561046657610465610b53565b5b6040519080825280602002602001820160405280156104945781602001602082028036833780820191505090505b50600090805190602001906104aa929190610802565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516104f190610bb3565b60006040518083038185875af1925050503d806000811461052e576040519150601f19603f3d011682016040523d82523d6000602084013e610533565b606091505b505090508061054157600080fd5b5050565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b18800006105e3600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461072690919063ffffffff16565b1015610624576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061b90610c25565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106739190610c45565b925050819055506000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008082815481106106f4576106f3610aac565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061073283610762565b90506000670de0b6b3a7640000858361074b9190610c9b565b6107559190610d24565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156107ab57600080fd5b505afa1580156107bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e39190610dcd565b5050509150506402540be400816107fa9190610e48565b915050919050565b82805482825590600052602060002090810192821561087b579160200282015b8281111561087a5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610822565b5b509050610888919061088c565b5090565b5b808211156108a557600081600090555060010161088d565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108d9826108ae565b9050919050565b6108e9816108ce565b81146108f457600080fd5b50565b600081359050610906816108e0565b92915050565b600060208284031215610922576109216108a9565b5b6000610930848285016108f7565b91505092915050565b6000819050919050565b61094c81610939565b82525050565b60006020820190506109676000830184610943565b92915050565b610976816108ce565b82525050565b6000602082019050610991600083018461096d565b92915050565b6000819050919050565b60006109bc6109b76109b2846108ae565b610997565b6108ae565b9050919050565b60006109ce826109a1565b9050919050565b60006109e0826109c3565b9050919050565b6109f0816109d5565b82525050565b6000602082019050610a0b60008301846109e7565b92915050565b610a1a81610939565b8114610a2557600080fd5b50565b600081359050610a3781610a11565b92915050565b600060208284031215610a5357610a526108a9565b5b6000610a6184828501610a28565b91505092915050565b600081519050610a7981610a11565b92915050565b600060208284031215610a9557610a946108a9565b5b6000610aa384828501610a6a565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b1582610939565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610b4857610b47610adb565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610b9d600083610b82565b9150610ba882610b8d565b600082019050919050565b6000610bbe82610b90565b9150819050919050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610c0f601b83610bc8565b9150610c1a82610bd9565b602082019050919050565b60006020820190508181036000830152610c3e81610c02565b9050919050565b6000610c5082610939565b9150610c5b83610939565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610c9057610c8f610adb565b5b828201905092915050565b6000610ca682610939565b9150610cb183610939565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610cea57610ce9610adb565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d2f82610939565b9150610d3a83610939565b925082610d4a57610d49610cf5565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610d7481610d55565b8114610d7f57600080fd5b50565b600081519050610d9181610d6b565b92915050565b6000819050919050565b610daa81610d97565b8114610db557600080fd5b50565b600081519050610dc781610da1565b92915050565b600080600080600060a08688031215610de957610de86108a9565b5b6000610df788828901610d82565b9550506020610e0888828901610db8565b9450506040610e1988828901610a6a565b9350506060610e2a88828901610a6a565b9250506080610e3b88828901610d82565b9150509295509295909350565b6000610e5382610d97565b9150610e5e83610d97565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610e9d57610e9c610adb565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610eda57610ed9610adb565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610f1757610f16610adb565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610f5457610f53610adb565b5b82820290509291505056fea26469706673582212209a2d6cfa4a24aacb27dd1110f2792ed544678cd2f392409565e41352b719260964736f6c63430008080033",
  "devdoc": {
    "author": "eskaine",
    "kind": "dev",
    "methods": {},
    "title": "Contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 67,
        "contract": "contracts/Funding.sol:Funding",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 71,
        "contract": "contracts/Funding.sol:Funding",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 74,
        "contract": "contracts/Funding.sol:Funding",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}